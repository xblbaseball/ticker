name: Build and Test
on:
  push:
    branches-ignore:
      - main

jobs:
  collect-stats:
    name: Collect data from sheets
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: install python deps
        run: pip install -r requirements.txt
      - name: copy latest from sheets
        run: python scripts/get-sheets.py
        env:
          G_SHEETS_API_KEY: ${{ secrets.G_SHEETS_API_KEY }}
      - name: structure and aggregate stats
        run: python scripts/agg-stats.py --season ${{ env.SEASON }}
      - name: save results
        uses: actions/upload-artifact@v4
        with:
          name: json_all
          path: public/json

  # see https://github.com/actions/starter-workflows/blob/main/pages/nextjs.yml
  build:
    name: Build static site
    needs: collect-stats
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: Download sheets data
        uses: actions/download-artifact@v4
        with:
          name: json_all
          path: public/json
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
      # https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#github-actions
      - name: nextjs build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
        env:
          NEXT_PUBLIC_BASEPATH: ${{ format('/{0}', github.event.repository.name ) }}
